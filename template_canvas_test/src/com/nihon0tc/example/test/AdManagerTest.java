package com.nihon0tc.example.test;import java.lang.reflect.Field;import android.app.Activity;import android.app.Instrumentation.ActivityMonitor;import android.content.SharedPreferences;import android.content.SharedPreferences.Editor;import android.content.res.Resources;import android.preference.PreferenceManager;import android.test.SingleLaunchActivityTestCase;import android.test.TouchUtils;import android.test.mock.MockContext;import android.util.TimingLogger;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import com.nihon0tc.ad.AdManager;import com.nihon0tc.example.TemplateCanvasActivity;public class AdManagerTest extends SingleLaunchActivityTestCase<TemplateCanvasActivity> {	private String TAG = "AdManagerTest";	public AdManagerTest(String pkg, Class<TemplateCanvasActivity> activityClass) {		super(pkg, activityClass);	}	public AdManagerTest() {		super("com.nihon0tc.example", TemplateCanvasActivity.class);	}	/**     * テスト用Mock     */	private MediationTestMockContext moc;    class MediationTestMockContext extends MockContext {        @Override        public Resources getResources() {            //return getInstrumentation().getTargetContext().getResources();        	return getInstrumentation().getContext().getResources();        }    }		private Activity activity;	private AdManager adm;	private String[] mediation_array;	private ImageView target;	protected void setUp() throws Exception {		super.setUp();		moc = new MediationTestMockContext();		activity = getActivity();		//テストプロジェクトより取得	    mediation_array = moc.getResources().getStringArray(com.nihon0tc.example.test.R.array.mediation_array);	    //テスト対象より取得		target = (ImageView)activity.findViewById(com.nihon0tc.example.R.id.ImageGroovy);				try {		  	Field f = TemplateCanvasActivity.class.getDeclaredField("adm");			f.setAccessible(true);			adm = (AdManager)f.get(activity);		}		catch(Exception ex){			ex.printStackTrace();		}	}		public void tearDown() {		try {			super.tearDown();		} catch (Exception e) {			e.printStackTrace();		}		if(adm!=null)adm.end();		this.getActivity().finish();	}		private int[] ids ={com.nihon0tc.example.R.id.FrameLayoutMainK02,com.nihon0tc.example.R.id.FrameLayoutMainK01};		private TimingLogger timings = null;	public void testManager(){		ActivityMonitor monitor = new ActivityMonitor("com.nihon0tc.example.TemplateCanvasActivity", null, true);		getInstrumentation().addMonitor(monitor);		timings = new TimingLogger(TAG, "method");		int len_mediation_array = mediation_array.length;		for(int i=0 ;i<len_mediation_array;i++){						final int loop = i;			final int pos = ids[i%2];			activity.runOnUiThread( new Runnable() {	            @Override	            public void run() {	            	timings.addSplit("work a");	    			adm.adMob_init(mediation_array[loop]);	        		ViewGroup v = (ViewGroup) activity.findViewById(com.nihon0tc.example.R.id.FrameLayout_root);	        		adm.nextAd(v, pos);	            	timings.addSplit("work b");	            }			});			getInstrumentation().waitForIdleSync();			//タップして２秒ウエイト			TouchUtils.tapView(this,(View)target);			getInstrumentation().waitForMonitorWithTimeout(monitor, 8000); 			timings.dumpToLog();			timings.reset();		}		getInstrumentation().waitForMonitorWithTimeout(monitor, 8000); 	}		public void testManagerPref(){		SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(activity);		Editor ed = pref.edit();		ed.clear().commit();		testManager();	}	}